{"version":3,"sources":["hooks/useForm.js","validateInfo.js","components/Signup.jsx","components/FormSuccess.jsx","components/Form.jsx","App.js","index.js"],"names":["useForm","callback","validate","useState","username","email","password","password2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","changeHandler","e","target","name","value","submitHandler","preventDefault","validateInfo","trim","test","Signup","submitForm","className","onSubmit","htmlFor","type","id","placeholder","onChange","href","FormSuccess","src","alt","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b35f8ae.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const changeHandler = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { values, changeHandler, submitHandler, errors };\n};\n\nexport default useForm;\n","export default function validateInfo(values) {\n  let errors = {};\n\n  // Username Validation\n  if (!values.username.trim()) {\n    errors.username = \"Username is required!\";\n  }\n\n  // Email Validation\n  if (!values.email) {\n    errors.email = \"Email is required!\";\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = \"Email address is invalid\";\n  }\n\n  // Password Validation\n  if (!values.password) {\n    errors.password = \"Password is required!\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Password needs to be 6 characters or more\";\n  }\n\n  // Password Validation\n  if (!values.password2) {\n    errors.password2 = \"Password is required!\";\n  } else if (values.password2 !== values.password) {\n    errors.password2 = \"Passwords do not match\";\n  }\n\n  return errors;\n}\n","import React from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport validate from \"../validateInfo\";\nimport \"./Form.css\";\n\nconst Signup = ({ submitForm }) => {\n  const { values, changeHandler, submitHandler, errors } = useForm(\n    submitForm,\n    validate\n  );\n\n  return (\n    <div className=\"form-content-right\">\n      <form className=\"form\" onSubmit={submitHandler}>\n        <h1>\n          Get started with us today! Create your account by filling out he info\n          below.\n        </h1>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"username\" className=\"form-label\">\n            Username{\" \"}\n          </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            className=\"form-input\"\n            placeholder=\"Enter your username\"\n            value={values.username}\n            onChange={changeHandler}\n          />\n          {errors.username && <p>{errors.username}</p>}\n        </div>\n\n        <div className=\"form-inputs\">\n          <label htmlFor=\"email\" className=\"form-label\">\n            Email{\" \"}\n          </label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            className=\"form-input\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={changeHandler}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n\n        <div className=\"form-inputs\">\n          <label htmlFor=\"password\" className=\"form-label\">\n            Password{\" \"}\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            className=\"form-input\"\n            placeholder=\"Enter your password\"\n            value={values.password}\n            onChange={changeHandler}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n\n        <div className=\"form-inputs\">\n          <label htmlFor=\"password2\" className=\"form-label\">\n            Confirm Password{\" \"}\n          </label>\n          <input\n            type=\"password\"\n            id=\"password2\"\n            name=\"password2\"\n            className=\"form-input\"\n            placeholder=\"Enter your password\"\n            value={values.password2}\n            onChange={changeHandler}\n          />\n          {errors.password2 && <p>{errors.password2}</p>}\n        </div>\n\n        <button className=\"form-input-btn\" type=\"submit\">\n          Sign up\n        </button>\n        <span className=\"form-input-login\">\n          Already have an account? <a href=\"#\">Login here</a>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\n\nconst FormSuccess = () => {\n  return (\n    <div className=\"form-content-right\">\n      <div className=\"form-success\">We have received your request!</div>\n      <img src=\"img/img-3.svg\" className=\"form-img-2\" alt=\"Success image\" />\n    </div>\n  );\n};\n\nexport default FormSuccess;\n","import React, { useState } from \"react\";\nimport Signup from \"./Signup\";\nimport FormSuccess from \"./FormSuccess\";\nimport \"./Form.css\";\n\nconst Form = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  return (\n    <>\n      <div className=\"form-container\">\n        <span className=\"close-btn\">x</span>\n        <div className=\"form-content-left\">\n          <img src=\"img/img-2.svg\" alt=\"Form image\" className=\"form-img\" />\n        </div>\n\n        {!isSubmitted ? <Signup submitForm={submitForm} /> : <FormSuccess />}\n      </div>\n    </>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}